plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.8.1'
    id 'com.github.ben-manes.versions' version '0.14.0'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile files('lib/jlfgr-1_0.jar')

    compile group: 'com.github.michaelruocco', name: 'elapsed-time', version: '1.0.4'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.6.2'
    testCompile group: 'eu.codearte.catch-exception', name: 'catch-exception', version: '1.4.4'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
    testCompile group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.16.1'
}


task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

def mainClass = 'uk.co.mruoc.race.Main'

task allJar(type: Jar) {
    manifest {
        attributes 'Main-Class': mainClass
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task runGui(type: JavaExec) {
    main = mainClass
    classpath = configurations.runtime + sourceSets.main.output
}

task runConsole(type: JavaExec) {
    main = mainClass
    classpath = configurations.runtime + sourceSets.main.output
    args = [ '-m', 'console' ]
}
